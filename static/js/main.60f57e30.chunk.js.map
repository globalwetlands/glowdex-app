{"version":3,"sources":["common/Spinner.js","redux/globalSettingsSlice.js","utils/dataUtils.js","common/IconButton.js","common/Popup.js","features/map/Menu.js","features/map/mapStyles.js","features/map/Map.js","utils/dataHooks.js","features/widgets/WidgetBox.js","features/widgets/Widgets.js","app/App.js","redux/gridItemsSlice.js","redux/store.js","index.js","common/Spinner.module.css"],"names":["Spinner","isSmall","props","size","className","styles","spinner","width","height","viewBox","xmlns","pathSmall","path","fill","strokeWidth","strokeLinecap","cx","cy","r","globalSettingsSlice","createSlice","name","initialState","showMenuHelpText","reducers","hideMenuHelpText","state","actions","fetcher","fetch","then","res","json","IconButton","Icon","onClick","role","onKeyDown","e","code","tabIndex","Popup","title","modalIsOpen","setModalIsOpen","children","closeModal","isOpen","onAfterOpen","onRequestClose","overlayClassName","CloseIcon","Modal","setAppElement","MenuPopupContent","MenuIcon","stroke","strokeLinejoin","d","x1","y1","x2","y2","Menu","useState","menuIsOpen","setMenuIsOpen","useSelector","globalSettings","gridLayerStyle","id","type","paint","Map","mapRef","useRef","dispatch","useDispatch","latitude","longitude","zoom","minZoom","viewport","setViewport","tooltip","setTooltip","useSWR","process","data","isLoading","error","mapFeatures","features","useMapFeatures","fitBounds","useCallback","feature","bbox","minLng","minLat","maxLng","maxLat","WebMercatorViewport","padding","top","bottom","right","left","offset","updatedViewport","transitionDuration","transitionInterpolator","FlyToInterpolator","mapStyle","onViewportChange","mapboxApiAccessToken","onHover","srcEvent","offsetX","offsetY","hoveredFeature","find","f","layer","x","y","onMouseOut","clickedFeature","ref","getCursor","isHovering","isDragging","properties","ID","style","renderTooltip","position","WidgetBox","onClose","Widgets","selectedGridItems","gridItems","length","App","gridItemsSlice","setSelectedGridItems","action","payload","rootReducer","combineReducers","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistStore","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.60f57e30.chunk.js","sourcesContent":["import styles from './Spinner.module.css'\n\nexport function Spinner({ isSmall = false, ...props }) {\n  const size = isSmall ? 25 : 66\n  return (\n    <svg\n      className={styles.spinner}\n      data-testid=\"spinner\"\n      width={size}\n      height={size}\n      viewBox={`0 0 ${size} ${size}`}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <circle\n        className={isSmall ? styles.pathSmall : styles.path}\n        fill=\"none\"\n        strokeWidth={size / 10}\n        strokeLinecap=\"round\"\n        cx={size / 2}\n        cy={size / 2}\n        r={size / 2 - 3}\n      />\n    </svg>\n  )\n}\n","import { createSlice } from '@reduxjs/toolkit'\n\nconst initialState = {\n  showMenuHelpText: true,\n}\n\nconst globalSettingsSlice = createSlice({\n  name: 'globalSettings',\n  initialState,\n  reducers: {\n    hideMenuHelpText: (state) => {\n      state.showMenuHelpText = false\n    },\n  },\n})\n\nexport const { hideMenuHelpText } = globalSettingsSlice.actions\n\nexport default globalSettingsSlice.reducer\n","import { saveAs } from 'file-saver'\nimport { parseAsync } from 'json2csv'\n\nexport const fetcher = (...args) => fetch(...args).then(res => res.json())\n\nexport const loadGeojson = async ({\n  name = 'grid', // country, aoi, wdpa\n}) => {\n  const dataUrl = `${process.env.PUBLIC_URL}/geojson/${name}.json`\n  console.log('Loading geojson data', dataUrl)\n  // await delay(1000)\n  const data = await fetch(dataUrl).then((res) => res.json())\n  return data\n}\n\nexport const loadSingleLocationData = async (locationID) => {\n  console.log(`Loading location ${locationID} data`)\n  const dataUrl = `${process.env.PUBLIC_URL}/locations_data/${locationID}.json`\n  const data = fetch(dataUrl).then((res) => res.json())\n  // await delay(1000)\n  return data\n}\n\n\nexport async function exportCsv({\n  data,\n  filename = `${new Date()}.csv`,\n  options = {},\n}) {\n  const csv = await parseAsync(data, options)\n  const blob = new Blob([csv], { type: 'text/csv;charset=utf-8' })\n  saveAs(blob, filename)\n}\n","export function IconButton({ Icon, onClick, ...props }) {\n  const handleKeyDown = (e) => {\n    if (e.code === 'Space' || e.code === 'Enter') {\n      onClick(e)\n    }\n  }\n  return (\n    <Icon\n      role=\"button\"\n      onClick={onClick}\n      onKeyDown={handleKeyDown}\n      tabIndex={0}\n      aria-pressed=\"false\"\n      {...props}\n    />\n  )\n}\n","import './Popup.css'\n\nimport CloseIcon from 'react-feather/dist/icons/x'\nimport Modal from 'react-modal'\n\nimport { IconButton } from './IconButton'\n\n// Make sure to bind modal to your appElement (http://reactcommunity.org/react-modal/accessibility/)\nModal.setAppElement(`#root`)\n\nexport function Popup({ title, modalIsOpen, setModalIsOpen, children }) {\n  function afterOpenModal() {}\n\n  function closeModal() {\n    setModalIsOpen(false)\n  }\n\n  return (\n    <Modal\n      isOpen={modalIsOpen}\n      onAfterOpen={afterOpenModal}\n      onRequestClose={closeModal}\n      className=\"Popup--Modal\"\n      overlayClassName=\"Popup--Overlay\"\n    >\n      <div className=\"Popup--Modal--Inner\">\n        {title && <h3 className=\"Popup--Title\">{title}</h3>}\n        <div className=\"Popup--Content\">{children}</div>\n      </div>\n      <IconButton\n        Icon={CloseIcon}\n        className=\"Popup--CloseButton\"\n        onClick={closeModal}\n      />\n    </Modal>\n  )\n}\n","import './Menu.css'\n\nimport { Fragment, useState } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { IconButton } from '../../common/IconButton'\nimport { Popup } from '../../common/Popup'\n\nconst MenuPopupContent = () => (\n  <div>\n    <h4>Hello World</h4>\n    <p></p>\n  </div>\n)\n\nconst MenuIcon = (props) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      {...props}\n    >\n      <circle cx=\"12\" cy=\"12\" r=\"11.5\"></circle>\n      <path d=\"M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3\"></path>\n      <line x1=\"12\" y1=\"17\" x2=\"12.01\" y2=\"17\"></line>\n    </svg>\n  )\n}\n\nexport function Menu() {\n  const [menuIsOpen, setMenuIsOpen] = useState(false)\n  const showMenuHelpText = useSelector(\n    (state) => state.globalSettings.showMenuHelpText\n  )\n\n  const menuPopupTitle = 'Glowdex App'\n\n  const openMenu = () => {\n    setMenuIsOpen(true)\n  }\n\n  return (\n    <Fragment>\n      <div className=\"Menu--MenuButtonWrap\" data-hashelptext={showMenuHelpText}>\n        <IconButton\n          Icon={MenuIcon}\n          onClick={openMenu}\n          className=\"Menu--MenuButton\"\n          title=\"Open Menu\"\n          tabIndex={1}\n        />\n        <div className=\"Menu--HelpText\">Click on a country to get started</div>\n      </div>\n      <Popup\n        title={menuPopupTitle}\n        modalIsOpen={menuIsOpen}\n        setModalIsOpen={setMenuIsOpen}\n      >\n        <MenuPopupContent />\n      </Popup>\n    </Fragment>\n  )\n}\n","export const gridLayerStyle = {\n  id: 'data',\n  type: 'fill',\n  paint: {\n    'fill-opacity': 1,\n    'fill-outline-color': '#212121',\n    'fill-color': `rgba(0,0,0,0.3)`,\n  },\n}\n","import './Map.css'\n\nimport _ from 'lodash'\nimport { useCallback, useRef, useState } from 'react'\nimport {\n  FlyToInterpolator,\n  Layer,\n  InteractiveMap as MapGL,\n  NavigationControl,\n  Source,\n  WebMercatorViewport,\n} from 'react-map-gl'\nimport { useDispatch } from 'react-redux'\n\nimport bbox from '@turf/bbox'\n\nimport { Spinner } from '../../common/Spinner'\nimport { hideMenuHelpText } from '../../redux/globalSettingsSlice'\nimport { useMapFeatures } from '../../utils/dataHooks'\nimport MapLegend from './MapLegend'\nimport { Menu } from './Menu'\nimport { gridLayerStyle } from './mapStyles'\n\nexport function Map() {\n  const mapboxApiAccessToken = process.env.REACT_APP_MAPBOX_ACCESS_TOKEN\n  const mapStyle =\n    'mapbox://styles/ejinks-gu/ckhycntp61ol31am7qum156sk?optimize=true'\n  const mapRef = useRef()\n\n  const dispatch = useDispatch()\n\n  const [viewport, setViewport] = useState({\n    // width: 400,\n    // height: 400,\n    latitude: 20,\n    longitude: 0,\n    zoom: 2,\n    minZoom: 2,\n  })\n\n  const [tooltip, setTooltip] = useState({})\n  const { mapFeatures, isLoading } = useMapFeatures()\n\n  const fitBounds = useCallback(\n    (feature) => {\n      // calculate the bounding box of the feature\n      const [minLng, minLat, maxLng, maxLat] = bbox(feature)\n\n      const { longitude, latitude, zoom } = new WebMercatorViewport(\n        viewport\n      ).fitBounds(\n        [\n          [minLng, minLat],\n          [maxLng, maxLat],\n        ],\n        {\n          padding: { top: 100, bottom: 200, right: 100, left: 100 },\n          offset: [0, 0],\n        }\n      )\n      const updatedViewport = {\n        ...viewport,\n        longitude,\n        latitude,\n        zoom,\n        transitionDuration: 1000,\n        transitionInterpolator: new FlyToInterpolator(),\n        // transitionEasing: d3.easeCubic,\n      }\n      setViewport(updatedViewport)\n    },\n    [viewport]\n  )\n\n  const onHover = (e) => {\n    const {\n      features,\n      srcEvent: { offsetX, offsetY },\n    } = e\n    const hoveredFeature =\n      features && features.find((f) => f.layer.id === 'data')\n\n    setTooltip({\n      hoveredFeature,\n      x: offsetX,\n      y: offsetY,\n    })\n  }\n\n  const onMouseOut = () => {\n    setTooltip({})\n  }\n\n  const onClick = (e) => {\n    const { features } = e\n    const clickedFeature =\n      features && features.find((f) => f.layer.id === 'data')\n    if (clickedFeature) {\n      fitBounds(clickedFeature)\n      dispatch(hideMenuHelpText())\n    }\n  }\n\n  const renderTooltip = () => {\n    const { hoveredFeature, x, y } = tooltip\n\n    if (!hoveredFeature) {\n      return null\n    }\n\n    const id = hoveredFeature.properties?.ID\n    const name = `${id}`\n\n    return (\n      hoveredFeature && (\n        <div className=\"Map--Tooltip\" style={{ left: x, top: y }}>\n          <div>\n            <span className=\"Map--Tooltip--Value\">{name}</span>\n          </div>\n        </div>\n      )\n    )\n  }\n\n  const getCursor = (e) => {\n    if (e.isHovering) {\n      return 'pointer'\n    }\n    if (e?.isDragging) {\n      return 'grabbing'\n    }\n    if (tooltip?.hoveredFeature) {\n      return 'crosshair'\n    }\n    return 'grab'\n  }\n\n  return (\n    <div className=\"Map\">\n      <MapGL\n        {...viewport}\n        width=\"100%\"\n        height=\"100%\"\n        mapStyle={mapStyle}\n        onViewportChange={setViewport}\n        mapboxApiAccessToken={mapboxApiAccessToken}\n        onHover={onHover}\n        onMouseOut={onMouseOut}\n        onClick={onClick}\n        ref={mapRef}\n        getCursor={getCursor}\n      >\n        <NavigationControl\n          className=\"Map--NavigationControl\"\n          onViewportChange={setViewport}\n        />\n\n        <Source\n          type=\"geojson\"\n          data={{ type: 'FeatureCollection', features: mapFeatures }}\n        >\n          <Layer {...gridLayerStyle} />\n        </Source>\n\n        {renderTooltip()}\n      </MapGL>\n\n      <div className=\"Map--Overlays\">\n        <Menu />\n        {/* {!isLoading  && <MapLegend />} */}\n      </div>\n\n      {isLoading && (\n        <Spinner\n          style={{\n            position: 'absolute',\n            top: 'calc(50% - 33px)',\n            left: 'calc(50% - 33px)',\n          }}\n        />\n      )}\n    </div>\n  )\n}\n","import useSWR from 'swr'\n\nimport { fetcher } from './dataUtils'\n\nexport function useMapFeatures() {\n  const { data, error } = useSWR(\n    `${process.env.PUBLIC_URL}/geojson/grid.geojson`,\n    fetcher\n  )\n  const isLoading = !data\n\n  const features = data?.features\n\n  return {\n    mapFeatures: features,\n    isLoading,\n  }\n}\n","import CloseIcon from 'react-feather/dist/icons/x'\n\nimport { IconButton } from '../../common/IconButton'\n\nexport function WidgetBox({ children, onClose, ...props }) {\n  return (\n    <div className=\"Widgets--Box\" {...props}>\n      <IconButton\n        Icon={CloseIcon}\n        className=\"Widgets--Box--CloseButton\"\n        onClick={onClose}\n      />\n      {children}\n    </div>\n  )\n}\n","import './Widgets.css'\n\nimport { useSelector } from 'react-redux'\n\nimport { WidgetBox } from './WidgetBox'\n\nexport function Widgets() {\n  const selectedGridItems = useSelector(\n    (state) => state.gridItems.selectedGridItems\n  )\n\n  return (\n    <>\n      {!!selectedGridItems?.length && (\n        <div className=\"Widgets--Wrap\">\n          <WidgetBox onClose={() => {}}>\n            <p>Hello Widgets</p>\n          </WidgetBox>\n        </div>\n      )}\n    </>\n  )\n}\n","import { Map } from '../features/map/Map'\nimport { Widgets } from '../features/widgets/Widgets'\n\nexport function App() {\n  return (\n    <main>\n      <Map />\n      <Widgets />\n    </main>\n  )\n}\n","import { createSlice } from '@reduxjs/toolkit'\n\nconst initialState = {\n  selectedGridItems: [],\n}\n\nconst gridItemsSlice = createSlice({\n  name: 'gridItems',\n  initialState,\n  reducers: {\n    setSelectedGridItems: (state, action) => {\n      state.selectedGridItems = action.payload\n    },\n  },\n})\n\nexport const { setSelectedGridItems } = gridItemsSlice.actions\n\nexport default gridItemsSlice.reducer\n","import {\n  FLUSH,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n  REHYDRATE,\n  persistReducer,\n  persistStore,\n} from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\n\nimport {\n  combineReducers,\n  configureStore,\n  getDefaultMiddleware,\n} from '@reduxjs/toolkit'\n\nimport globalSettingsSlice from './globalSettingsSlice'\nimport gridItemsSlice from './gridItemsSlice'\n\nconst createPersistedReducer = ({ key, reducer, config = {} }) => {\n  const persistConfig = {\n    key,\n    storage,\n    ...config,\n  }\n\n  const persistedReducer = persistReducer(persistConfig, reducer)\n  return persistedReducer\n}\n\nconst rootReducer = combineReducers({\n  globalSettings: globalSettingsSlice,\n  gridItems: gridItemsSlice,\n})\n\nexport const store = configureStore({\n  reducer: rootReducer,\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n})\nexport const persistor = persistStore(store)\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { PersistGate } from 'redux-persist/integration/react'\n\nimport { App } from './app/App'\nimport { persistor, store } from './redux/store'\n\nconst appElementID = 'root'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(appElementID)\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"Spinner_spinner__1QSjx\",\"rotator\":\"Spinner_rotator__ldWJL\",\"path\":\"Spinner_path__B6xE1\",\"dash\":\"Spinner_dash__3VCIb\",\"colors\":\"Spinner_colors__3EM4d\",\"pathSmall\":\"Spinner_pathSmall__1zioJ\",\"dashSmall\":\"Spinner_dashSmall__2ti9Z\"};"],"sourceRoot":""}